AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Globals:
  Api:
    Cors:
      AllowOrigin: "'*'"
      AllowHeaders: "'*'"
      AllowMethods: "'*'"
Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../apps/backend/helloworld/app/build/libs/app-0.1-all.jar # point to project fat jar
      Handler: io.micronaut.function.aws.proxy.payload1.ApiGatewayProxyRequestEventFunction
      Runtime: java21
      MemorySize: 512
      Timeout: 10
      Tracing: Active
      SnapStart:
        ApplyOn: PublishedVersions
      Architectures:
        - x86_64
      Environment:
        Variables:
          MICRONAUT_ENVIRONMENTS: development
  # sync with CDK
  HelloWorldApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      DefinitionBody:
        swagger: 2.0
        paths:
          # both bath path and proxy path
          /hello-world:
            x-amazon-apigateway-any-method:
              parameters:
                - name: 'proxy'
                  in: 'path'
                  required: true
                  type: 'string'
              responses: {}
              x-amazon-apigateway-integration:
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HelloWorldFunction.Arn}/invocations
                passthroughBehavior: when_no_match
                httpMethod: ANY
                type: aws_proxy
          /hello-world/{proxy+}:
            x-amazon-apigateway-any-method:
              parameters:
                - name: 'proxy'
                  in: 'path'
                  required: true
                  type: 'string'
              responses: {}
              x-amazon-apigateway-integration:
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HelloWorldFunction.Arn}/invocations
                passthroughBehavior: when_no_match
                httpMethod: ANY
                type: aws_proxy

          /hello:
            x-amazon-apigateway-any-method:
              parameters:
                - name: 'proxy'
                  in: 'path'
                  required: true
                  type: 'string'
              responses: {}
              x-amazon-apigateway-integration:
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HelloWorldFunction.Arn}/invocations
                passthroughBehavior: when_no_match
                httpMethod: ANY
                type: aws_proxy
          /hello/{proxy+}:
            x-amazon-apigateway-any-method:
              parameters:
                - name: 'proxy'
                  in: 'path'
                  required: true
                  type: 'string'
              responses: {}
              x-amazon-apigateway-integration:
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HelloWorldFunction.Arn}/invocations
                passthroughBehavior: when_no_match
                httpMethod: ANY
                type: aws_proxy
